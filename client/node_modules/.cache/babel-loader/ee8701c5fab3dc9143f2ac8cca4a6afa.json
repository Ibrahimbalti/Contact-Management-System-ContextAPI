{"ast":null,"code":"import _toConsumableArray from\"E:/Axoms course/Module B/Mern Stack Projects/contact-manager/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"E:/Axoms course/Module B/Mern Stack Projects/contact-manager/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_CONTACT,ADD_CONTACT,DELETE_CONTACT,SET_CURRENT,CLEAR_CURRENT,UPDATE_CONTACT,FILTER_CONTACT,CLEAR_CONTACT,CLEAR_FILTER,CONTACT_ERROR}from'../types';var contactReducer=function contactReducer(state,action){switch(action.type){case GET_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:action.payload,loading:false});case ADD_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:[].concat(_toConsumableArray(state.contacts),[action.payload])});case DELETE_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:state.contacts.filter(function(contact){return contact._id!==action.payload;})});case UPDATE_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:state.contacts.map(function(contact){return contact._id===action.payload.id?action.payload:contact;})});case SET_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:action.payload});case CLEAR_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:null});case FILTER_CONTACT:return _objectSpread(_objectSpread({},state),{},{filter:state.contacts.filter(function(contact){// we make regular expression ..in regular expression first we pass action.payload the action.payload contant the text\n// and g means globally match the text and i means not a case sensative\nvar regex=new RegExp(\"\".concat(action.payload),'gi');// we match the contact name to search box text and after we match email to search box text\nreturn contact.name.match(regex)||contact.email.match(regex);})});case CLEAR_FILTER:return _objectSpread(_objectSpread({},state),{},{filter:null});case CONTACT_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload});case CLEAR_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:null,filter:null,error:null,current:null});default:return state;}};export default contactReducer;","map":{"version":3,"sources":["E:/Axoms course/Module B/Mern Stack Projects/contact-manager/client/src/context/contact/contactReducers.js"],"names":["GET_CONTACT","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACT","CLEAR_CONTACT","CLEAR_FILTER","CONTACT_ERROR","contactReducer","state","action","type","contacts","payload","loading","filter","contact","_id","map","id","current","regex","RegExp","name","match","email","error"],"mappings":"mTAAA,OACEA,WADF,CAEEC,WAFF,CAGEC,cAHF,CAIEC,WAJF,CAKEC,aALF,CAMEC,cANF,CAOEC,cAPF,CAQEC,aARF,CASEC,YATF,CAUEC,aAVF,KAWO,UAXP,CAaA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACxC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKb,CAAAA,WAAL,CACE,sCACKW,KADL,MAEEG,QAAQ,CAAEF,MAAM,CAACG,OAFnB,CAGEC,OAAO,CAAE,KAHX,GAKF,IAAKf,CAAAA,WAAL,CACE,sCACKU,KADL,MAEEG,QAAQ,8BAAMH,KAAK,CAACG,QAAZ,GAAsBF,MAAM,CAACG,OAA7B,EAFV,GAIF,IAAKb,CAAAA,cAAL,CACE,sCACKS,KADL,MAEEG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeG,MAAf,CACR,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAApC,EADQ,CAFZ,GAMF,IAAKV,CAAAA,cAAL,CACE,sCACKM,KADL,MAEEG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeM,GAAf,CAAmB,SAACF,OAAD,QAC3BA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAAP,CAAeM,EAA/B,CAAoCT,MAAM,CAACG,OAA3C,CAAqDG,OAD1B,EAAnB,CAFZ,GAMF,IAAKf,CAAAA,WAAL,CACE,sCACKQ,KADL,MAEEW,OAAO,CAAEV,MAAM,CAACG,OAFlB,GAKF,IAAKX,CAAAA,aAAL,CACE,sCACKO,KADL,MAEEW,OAAO,CAAE,IAFX,GAKF,IAAKhB,CAAAA,cAAL,CACE,sCACKK,KADL,MAEEM,MAAM,CAAEN,KAAK,CAACG,QAAN,CAAeG,MAAf,CAAsB,SAACC,OAAD,CAAa,CACzC;AACA;AACA,GAAMK,CAAAA,KAAK,CAAG,GAAIC,CAAAA,MAAJ,WAAcZ,MAAM,CAACG,OAArB,EAAgC,IAAhC,CAAd,CACA;AACA,MAAOG,CAAAA,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,GAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC,CACD,CANO,CAFV,GAWF,IAAKf,CAAAA,YAAL,CACE,sCACKG,KADL,MAEEM,MAAM,CAAE,IAFV,GAKF,IAAKR,CAAAA,aAAL,CACE,sCACKE,KADL,MAEEiB,KAAK,CAAEhB,MAAM,CAACG,OAFhB,GAKF,IAAKR,CAAAA,aAAL,CACE,sCACKI,KADL,MAEEG,QAAQ,CAAE,IAFZ,CAGEG,MAAM,CAAE,IAHV,CAIEW,KAAK,CAAE,IAJT,CAKEN,OAAO,CAAE,IALX,GAOF,QACE,MAAOX,CAAAA,KAAP,CAvEJ,CAyED,CA1ED,CA4EA,cAAeD,CAAAA,cAAf","sourcesContent":["import {\r\n  GET_CONTACT,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACT,\r\n  CLEAR_CONTACT,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n} from '../types';\r\n\r\nconst contactReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case GET_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload],\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact._id !== action.payload\r\n        ),\r\n      };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact._id === action.payload.id ? action.payload : contact\r\n        ),\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n\r\n    case FILTER_CONTACT:\r\n      return {\r\n        ...state,\r\n        filter: state.contacts.filter((contact) => {\r\n          // we make regular expression ..in regular expression first we pass action.payload the action.payload contant the text\r\n          // and g means globally match the text and i means not a case sensative\r\n          const regex = new RegExp(`${action.payload}`, 'gi');\r\n          // we match the contact name to search box text and after we match email to search box text\r\n          return contact.name.match(regex) || contact.email.match(regex);\r\n        }),\r\n      };\r\n\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: null,\r\n      };\r\n\r\n    case CONTACT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case CLEAR_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: null,\r\n        filter: null,\r\n        error: null,\r\n        current: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contactReducer;\r\n"]},"metadata":{},"sourceType":"module"}