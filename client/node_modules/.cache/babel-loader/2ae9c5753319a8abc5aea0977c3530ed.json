{"ast":null,"code":"var _jsxFileName = \"E:\\\\Axoms course\\\\Module B\\\\Mern Stack Projects\\\\contact-manager\\\\client\\\\src\\\\context\\\\alert\\\\AlertState.js\",\n    _s = $RefreshSig$();\n\n// import React, { useReducer } from 'react';\n// import axios from 'axios';\n// import alertContext from './alertContext';\n// import alertReducer from './alertReducer';\n// import { SET_ALERT, REMOVE_ALERT } from '../types';\n// import { v4 as uuid } from 'uuid';\n// const AlertState = (props) => {\n//   const initialState = [];\n//   const [state, dispatch] = useReducer(alertReducer, initialState);\n//   // Set alert\n//   // 5000 ms is equal to 5 second\n//   const setAlert = (msg, type, timeout = 5000) => {\n//     const id = uuid();\n//     dispatch({ type: SET_ALERT, payload: { msg, type, id } });\n//     setTimeout(dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n//   };\n//   return (\n//     <alertContext.Provider value={{ alert: state, setAlert }}>\n//       {props.children}\n//     </alertContext.Provider>\n//   );\n// };\n// export default AlertState;\nimport React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport alertContext from './alertContext';\nimport alertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlertState = props => {\n  _s();\n\n  const initialState = [];\n  const [state, dispatch] = useReducer(alertReducer, initialState); // Set Alert\n\n  const setAlert = (msg, type, timeout = 5000) => {\n    const id = uuid();\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type,\n        id\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT,\n      payload: id\n    }), timeout);\n  };\n\n  return /*#__PURE__*/_jsxDEV(alertContext.Provider, {\n    value: {\n      alert: state,\n      setAlert\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AlertState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AlertState;\nexport default AlertState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertState\");","map":{"version":3,"sources":["E:/Axoms course/Module B/Mern Stack Projects/contact-manager/client/src/context/alert/AlertState.js"],"names":["React","useReducer","v4","uuid","alertContext","alertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","msg","type","timeout","id","payload","setTimeout","alert","children"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,UAAxC;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,YAAY,GAAG,EAArB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACI,YAAD,EAAeK,YAAf,CAApC,CAH4B,CAK5B;;AACA,QAAMG,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,OAAO,GAAG,IAAtB,KAA+B;AAC9C,UAAMC,EAAE,GAAGd,IAAI,EAAf;AACAS,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAET,SAAR;AAAmBY,MAAAA,OAAO,EAAE;AAAEJ,QAAAA,GAAF;AAAOC,QAAAA,IAAP;AAAaE,QAAAA;AAAb;AAA5B,KAAD,CAAR;AAEAE,IAAAA,UAAU,CAAC,MAAMP,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,YAAR;AAAsBW,MAAAA,OAAO,EAAED;AAA/B,KAAD,CAAf,EAAsDD,OAAtD,CAAV;AACD,GALD;;AAOA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,KAAK,EAAET,KADF;AAELE,MAAAA;AAFK,KADT;AAAA,cAMGJ,KAAK,CAACY;AANT;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAvBD;;GAAMb,U;;KAAAA,U;AAyBN,eAAeA,UAAf","sourcesContent":["// import React, { useReducer } from 'react';\r\n// import axios from 'axios';\r\n// import alertContext from './alertContext';\r\n// import alertReducer from './alertReducer';\r\n// import { SET_ALERT, REMOVE_ALERT } from '../types';\r\n// import { v4 as uuid } from 'uuid';\r\n\r\n// const AlertState = (props) => {\r\n//   const initialState = [];\r\n\r\n//   const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n//   // Set alert\r\n//   // 5000 ms is equal to 5 second\r\n//   const setAlert = (msg, type, timeout = 5000) => {\r\n//     const id = uuid();\r\n//     dispatch({ type: SET_ALERT, payload: { msg, type, id } });\r\n//     setTimeout(dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n//   };\r\n\r\n//   return (\r\n//     <alertContext.Provider value={{ alert: state, setAlert }}>\r\n//       {props.children}\r\n//     </alertContext.Provider>\r\n//   );\r\n// };\r\n// export default AlertState;\r\n\r\nimport React, { useReducer } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport alertContext from './alertContext';\r\nimport alertReducer from './alertReducer';\r\n\r\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nconst AlertState = (props) => {\r\n  const initialState = [];\r\n\r\n  const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n  // Set Alert\r\n  const setAlert = (msg, type, timeout = 5000) => {\r\n    const id = uuid();\r\n    dispatch({ type: SET_ALERT, payload: { msg, type, id } });\r\n\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n  };\r\n\r\n  return (\r\n    <alertContext.Provider\r\n      value={{\r\n        alert: state,\r\n        setAlert,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </alertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;\r\n"]},"metadata":{},"sourceType":"module"}