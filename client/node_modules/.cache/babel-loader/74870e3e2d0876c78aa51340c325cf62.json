{"ast":null,"code":"import React,{useContext,Fragment,useEffect}from'react';import ContactContext from'../../context/contact/contactContext';import ContactItems from'./ContactItems';import Spinner from'../layout/Spinner';import{jsx as _jsx}from\"react/jsx-runtime\";export var Contacts=function Contacts(){var contactContext=useContext(ContactContext);var contacts=contactContext.contacts,filter=contactContext.filter,getContact=contactContext.getContact,loading=contactContext.loading;useEffect(function(){getContact();// eslint-disable-next-line\n},[]);if(contacts!==null&&contacts.length===0&&!loading){return/*#__PURE__*/_jsx(\"h3\",{children:\"Add the form of contact \"});}return/*#__PURE__*/_jsx(Fragment,{children:contacts!==null&&!loading?/*#__PURE__*/_jsx(Fragment,{children:filter!==null?filter.map(function(contact){return/*#__PURE__*/_jsx(ContactItems,{contact:contact},contact._id);}):contacts.map(function(contact){return/*#__PURE__*/_jsx(ContactItems,{contact:contact},contact._id);})}):/*#__PURE__*/_jsx(Spinner,{})});};","map":{"version":3,"sources":["E:/Axoms course/Module B/Mern Stack Projects/contact-manager/client/src/components/contact/Contacts.js"],"names":["React","useContext","Fragment","useEffect","ContactContext","ContactItems","Spinner","Contacts","contactContext","contacts","filter","getContact","loading","length","map","contact","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,C,2CACA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAC5B,GAAMC,CAAAA,cAAc,CAAGP,UAAU,CAACG,cAAD,CAAjC,CACA,GAAQK,CAAAA,QAAR,CAAkDD,cAAlD,CAAQC,QAAR,CAAkBC,MAAlB,CAAkDF,cAAlD,CAAkBE,MAAlB,CAA0BC,UAA1B,CAAkDH,cAAlD,CAA0BG,UAA1B,CAAsCC,OAAtC,CAAkDJ,cAAlD,CAAsCI,OAAtC,CAEAT,SAAS,CAAC,UAAM,CACdQ,UAAU,GACV;AACD,CAHQ,CAGN,EAHM,CAAT,CAIA,GAAIF,QAAQ,GAAK,IAAb,EAAqBA,QAAQ,CAACI,MAAT,GAAoB,CAAzC,EAA8C,CAACD,OAAnD,CAA4D,CAC1D,mBAAO,gDAAP,CACD,CAED,mBACE,KAAC,QAAD,WACGH,QAAQ,GAAK,IAAb,EAAqB,CAACG,OAAtB,cACC,KAAC,QAAD,WACGF,MAAM,GAAK,IAAX,CACGA,MAAM,CAACI,GAAP,CAAW,SAACC,OAAD,qBACT,KAAC,YAAD,EAAgC,OAAO,CAAEA,OAAzC,EAAmBA,OAAO,CAACC,GAA3B,CADS,EAAX,CADH,CAIGP,QAAQ,CAACK,GAAT,CAAa,SAACC,OAAD,qBACX,KAAC,YAAD,EAAgC,OAAO,CAAEA,OAAzC,EAAmBA,OAAO,CAACC,GAA3B,CADW,EAAb,CALN,EADD,cAWC,KAAC,OAAD,IAZJ,EADF,CAiBD,CA7BM","sourcesContent":["import React, { useContext, Fragment, useEffect } from 'react';\r\nimport ContactContext from '../../context/contact/contactContext';\r\nimport ContactItems from './ContactItems';\r\nimport Spinner from '../layout/Spinner';\r\nexport const Contacts = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const { contacts, filter, getContact, loading } = contactContext;\r\n\r\n  useEffect(() => {\r\n    getContact();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  if (contacts !== null && contacts.length === 0 && !loading) {\r\n    return <h3>Add the form of contact </h3>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {contacts !== null && !loading ? (\r\n        <Fragment>\r\n          {filter !== null\r\n            ? filter.map((contact) => (\r\n                <ContactItems key={contact._id} contact={contact} />\r\n              ))\r\n            : contacts.map((contact) => (\r\n                <ContactItems key={contact._id} contact={contact} />\r\n              ))}\r\n        </Fragment>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}