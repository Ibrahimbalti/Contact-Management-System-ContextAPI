{"ast":null,"code":"var _jsxFileName = \"E:\\\\Axoms course\\\\Module B\\\\Mern Stack Projects\\\\contact-manager\\\\client\\\\src\\\\context\\\\auth\\\\AuthState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport authContext from './authContext';\nimport authReducer from './authReducers';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, LOGIN_SUCCESS, LOGIN_FAIL, LOGINOUT, AUTH_ERROR, CLEAR_ERRORS } from '../types';\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem('token'),\n    //check the user login or not\n    isAuthentication: null,\n    // jb page loading hoga tu loading true our jab load ho jaya ga tu ladding false ho jay ga\n    loading: true,\n    // jis ko user ko hmna authenticate krna ha\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); // load user\n  // Register user\n  //login user\n  //logout user\n  // clear errors\n\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthentication: state.isAuthentication,\n      loading: state.loading,\n      user: state.user,\n      error: state.error\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["E:/Axoms course/Module B/Mern Stack Projects/contact-manager/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","authContext","authReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","LOGIN_SUCCESS","LOGIN_FAIL","LOGINOUT","AUTH_ERROR","CLEAR_ERRORS","v4","uuid","AuthState","props","initialState","token","localStorage","getItem","isAuthentication","loading","user","error","state","dispatch","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,UALF,EAMEC,QANF,EAOEC,UAPF,EAQEC,YARF,QASO,UATP;AAUA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnB;AACAC,IAAAA,gBAAgB,EAAE,IAHC;AAInB;AACAC,IAAAA,OAAO,EAAE,IALU;AAMnB;AACAC,IAAAA,IAAI,EAAE,IAPa;AAQnBC,IAAAA,KAAK,EAAE;AARY,GAArB;AAWA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBzB,UAAU,CAACG,WAAD,EAAca,YAAd,CAApC,CAZ2B,CAc3B;AACA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADR;AAGLG,MAAAA,gBAAgB,EAAEI,KAAK,CAACJ,gBAHnB;AAKLC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OALV;AAOLC,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAPP;AAQLC,MAAAA,KAAK,EAAEC,KAAK,CAACD;AARR,KADT;AAAA,cAYGR,KAAK,CAACW;AAZT;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CApCD;;GAAMZ,S;;KAAAA,S;AAqCN,eAAeA,SAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport authContext from './authContext';\r\nimport authReducer from './authReducers';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGINOUT,\r\n  AUTH_ERROR,\r\n  CLEAR_ERRORS,\r\n} from '../types';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    token: localStorage.getItem('token'),\r\n    //check the user login or not\r\n    isAuthentication: null,\r\n    // jb page loading hoga tu loading true our jab load ho jaya ga tu ladding false ho jay ga\r\n    loading: true,\r\n    // jis ko user ko hmna authenticate krna ha\r\n    user: null,\r\n    error: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // load user\r\n  // Register user\r\n  //login user\r\n  //logout user\r\n  // clear errors\r\n\r\n  return (\r\n    <authContext.Provider\r\n      value={{\r\n        token: state.token,\r\n\r\n        isAuthentication: state.isAuthentication,\r\n\r\n        loading: state.loading,\r\n\r\n        user: state.user,\r\n        error: state.error,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </authContext.Provider>\r\n  );\r\n};\r\nexport default AuthState;\r\n"]},"metadata":{},"sourceType":"module"}