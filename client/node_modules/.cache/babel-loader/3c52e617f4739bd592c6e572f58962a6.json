{"ast":null,"code":"var _jsxFileName = \"E:\\\\Axoms course\\\\Module B\\\\Mern Stack Projects\\\\contact-manager\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducers';\nimport { ADD_CONTACT, GET_CONTACT, CLEAR_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACT, CLEAR_FILTER, CONTACT_ERROR } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [],\n    current: null,\n    filter: null,\n    error: null,\n    loading: false\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //set contact\n\n  const setContact = async () => {\n    try {\n      const res = await axios.get('/api/contact');\n      dispatch({\n        type: GET_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }; // Add contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contact', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.data\n      });\n    }\n  }; // delete conatact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // set Current\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // clear current\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // update contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Filter the contact\n\n\n  const filterContact = text => {\n    dispatch({\n      type: FILTER_CONTACT,\n      payload: text\n    });\n  }; // clear Filter the contact\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(contactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filter: state.filter,\n      error: state.error,\n      loading: state.loading,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter,\n      setContact\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["E:/Axoms course/Module B/Mern Stack Projects/contact-manager/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","contactContext","contactReducer","ADD_CONTACT","GET_CONTACT","CLEAR_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACT","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filter","error","loading","state","dispatch","setContact","res","get","type","payload","data","err","console","log","addContact","contact","config","headers","post","response","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContact","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport contactContext from './contactContext';\r\nimport contactReducer from './contactReducers';\r\nimport {\r\n  ADD_CONTACT,\r\n  GET_CONTACT,\r\n  CLEAR_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACT,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n} from '../types';\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = {\r\n    contacts: [],\r\n    current: null,\r\n    filter: null,\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  //set contact\r\n  const setContact = async () => {\r\n    try {\r\n      const res = await axios.get('/api/contact');\r\n      dispatch({ type: GET_CONTACT, payload: res.data });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // Add contact\r\n  const addContact = async (contact) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post('/api/contact', contact, config);\r\n      dispatch({ type: ADD_CONTACT, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: CONTACT_ERROR, payload: err.response.data });\r\n    }\r\n  };\r\n\r\n  // delete conatact\r\n  const deleteContact = (id) => {\r\n    dispatch({ type: DELETE_CONTACT, payload: id });\r\n  };\r\n\r\n  // set Current\r\n  const setCurrent = (contact) => {\r\n    dispatch({ type: SET_CURRENT, payload: contact });\r\n  };\r\n\r\n  // clear current\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n\r\n  // update contact\r\n\r\n  const updateContact = (contact) => {\r\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n  };\r\n\r\n  // Filter the contact\r\n  const filterContact = (text) => {\r\n    dispatch({ type: FILTER_CONTACT, payload: text });\r\n  };\r\n\r\n  // clear Filter the contact\r\n\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n\r\n  return (\r\n    <contactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filter: state.filter,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateContact,\r\n        filterContact,\r\n        clearFilter,\r\n        setContact,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </contactContext.Provider>\r\n  );\r\n};\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}