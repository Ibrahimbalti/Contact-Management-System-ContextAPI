{"ast":null,"code":"import { GET_CONTACT, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACT, CLEAR_CONTACT, CLEAR_FILTER, CONTACT_ERROR } from '../types';\n\nconst contactReducer = (state, action) => {\n  switch (action.type) {\n    case GET_CONTACT:\n      return { ...state,\n        contacts: action.payload,\n        loading: false\n      };\n\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact._id !== action.payload)\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case FILTER_CONTACT:\n      return { ...state,\n        filter: state.contacts.filter(contact => {\n          // we make regular expression ..in regular expression first we pass action.payload the action.payload contant the text\n          // and g means globally match the text and i means not a case sensative\n          const regex = new RegExp(`${action.payload}`, 'gi'); // we match the contact name to search box text and after we match email to search box text\n\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filter: null\n      };\n\n    case CONTACT_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    case CLEAR_CONTACT:\n      return { ...state,\n        contacts: null,\n        filter: null,\n        error: null,\n        current: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default contactReducer;","map":{"version":3,"sources":["E:/Axoms course/Module B/Mern Stack Projects/contact-manager/client/src/context/contact/contactReducers.js"],"names":["GET_CONTACT","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACT","CLEAR_CONTACT","CLEAR_FILTER","CONTACT_ERROR","contactReducer","state","action","type","contacts","payload","loading","filter","contact","_id","map","id","current","regex","RegExp","name","match","email","error"],"mappings":"AAAA,SACEA,WADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,cAPF,EAQEC,aARF,EASEC,YATF,EAUEC,aAVF,QAWO,UAXP;;AAaA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,WAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAFZ;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKf,WAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;AAFL,OAAP;;AAIF,SAAKb,cAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeG,MAAf,CACPC,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBP,MAAM,CAACG,OAD5B;AAFL,OAAP;;AAMF,SAAKV,cAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeM,GAAf,CAAoBF,OAAD,IAC3BA,OAAO,CAACG,EAAR,KAAeT,MAAM,CAACG,OAAP,CAAeM,EAA9B,GAAmCT,MAAM,CAACG,OAA1C,GAAoDG,OAD5C;AAFL,OAAP;;AAMF,SAAKf,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELW,QAAAA,OAAO,EAAEV,MAAM,CAACG;AAFX,OAAP;;AAKF,SAAKX,aAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELW,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF,SAAKhB,cAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELM,QAAAA,MAAM,EAAEN,KAAK,CAACG,QAAN,CAAeG,MAAf,CAAuBC,OAAD,IAAa;AACzC;AACA;AACA,gBAAMK,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEZ,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd,CAHyC,CAIzC;;AACA,iBAAOG,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACD,SANO;AAFH,OAAP;;AAWF,SAAKf,YAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELM,QAAAA,MAAM,EAAE;AAFH,OAAP;;AAKF,SAAKR,aAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELiB,QAAAA,KAAK,EAAEhB,MAAM,CAACG;AAFT,OAAP;;AAKF,SAAKR,aAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELG,QAAAA,QAAQ,EAAE,IAFL;AAGLG,QAAAA,MAAM,EAAE,IAHH;AAILW,QAAAA,KAAK,EAAE,IAJF;AAKLN,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF;AACE,aAAOX,KAAP;AAvEJ;AAyED,CA1ED;;AA4EA,eAAeD,cAAf","sourcesContent":["import {\r\n  GET_CONTACT,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACT,\r\n  CLEAR_CONTACT,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n} from '../types';\r\n\r\nconst contactReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case GET_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload],\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact._id !== action.payload\r\n        ),\r\n      };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id ? action.payload : contact\r\n        ),\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n\r\n    case FILTER_CONTACT:\r\n      return {\r\n        ...state,\r\n        filter: state.contacts.filter((contact) => {\r\n          // we make regular expression ..in regular expression first we pass action.payload the action.payload contant the text\r\n          // and g means globally match the text and i means not a case sensative\r\n          const regex = new RegExp(`${action.payload}`, 'gi');\r\n          // we match the contact name to search box text and after we match email to search box text\r\n          return contact.name.match(regex) || contact.email.match(regex);\r\n        }),\r\n      };\r\n\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: null,\r\n      };\r\n\r\n    case CONTACT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case CLEAR_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: null,\r\n        filter: null,\r\n        error: null,\r\n        current: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contactReducer;\r\n"]},"metadata":{},"sourceType":"module"}