{"ast":null,"code":"var _jsxFileName = \"E:\\\\Axoms course\\\\Module B\\\\Mern Stack Projects\\\\contact-manager\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducers';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACT, CLEAR_FILTER, CONTACT_ERROR } from '../types';\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'ibrahim',\n      email: 'ibrahim@gmail.com',\n      phone: '0093838',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'ismail',\n      email: 'ismailm@gmail.com',\n      phone: '930308',\n      type: 'personal'\n    }, {\n      id: 3,\n      name: 'ishaq',\n      email: 'ishqm@gmail.com',\n      phone: '037388',\n      type: 'professional'\n    }],\n    current: null,\n    filter: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Add contact\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contact', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.data\n      });\n    }\n  }; // delete conatact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // set Current\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // clear current\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // update contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Filter the contact\n\n\n  const filterContact = text => {\n    dispatch({\n      type: FILTER_CONTACT,\n      payload: text\n    });\n  }; // clear Filter the contact\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(contactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filter: state.filter,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["E:/Axoms course/Module B/Mern Stack Projects/contact-manager/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","contactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACT","CLEAR_FILTER","CONTACT_ERROR","v4","uuid","ContactState","props","initialState","contacts","id","name","email","phone","type","current","filter","state","dispatch","addContact","contact","config","headers","res","post","payload","data","err","response","deleteContact","setCurrent","clearCurrent","updateContact","filterContact","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport contactContext from './contactContext';\r\nimport contactReducer from './contactReducers';\r\nimport {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACT,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n} from '../types';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = {\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        name: 'ibrahim',\r\n        email: 'ibrahim@gmail.com',\r\n        phone: '0093838',\r\n        type: 'personal',\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'ismail',\r\n        email: 'ismailm@gmail.com',\r\n        phone: '930308',\r\n        type: 'personal',\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'ishaq',\r\n        email: 'ishqm@gmail.com',\r\n        phone: '037388',\r\n        type: 'professional',\r\n      },\r\n    ],\r\n\r\n    current: null,\r\n    filter: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  // Add contact\r\n  const addContact = async (contact) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post('/api/contact', contact, config);\r\n      dispatch({ type: ADD_CONTACT, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: CONTACT_ERROR, payload: err.response.data });\r\n    }\r\n  };\r\n\r\n  // delete conatact\r\n  const deleteContact = (id) => {\r\n    dispatch({ type: DELETE_CONTACT, payload: id });\r\n  };\r\n\r\n  // set Current\r\n  const setCurrent = (contact) => {\r\n    dispatch({ type: SET_CURRENT, payload: contact });\r\n  };\r\n\r\n  // clear current\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n\r\n  // update contact\r\n\r\n  const updateContact = (contact) => {\r\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n  };\r\n\r\n  // Filter the contact\r\n  const filterContact = (text) => {\r\n    dispatch({ type: FILTER_CONTACT, payload: text });\r\n  };\r\n\r\n  // clear Filter the contact\r\n\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n\r\n  return (\r\n    <contactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filter: state.filter,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateContact,\r\n        filterContact,\r\n        clearFilter,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </contactContext.Provider>\r\n  );\r\n};\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}