{"ast":null,"code":"import React,{useContext}from'react';import PropTypes from'prop-types';import ContactContext from'../../context/contact/contactContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ContactItems=function ContactItems(_ref){var contact=_ref.contact;var _id=contact._id,name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;var contactContext=useContext(ContactContext);var deleteContact=contactContext.deleteContact,setCurrent=contactContext.setCurrent,clearCurrent=contactContext.clearCurrent;var onDelete=function onDelete(){deleteContact(_id);clearCurrent();};return/*#__PURE__*/_jsxs(\"div\",{className:\"card bg-light\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-primary text-left\",children:[name,'',/*#__PURE__*/_jsx(\"span\",{style:{float:'right'},className:'badge '+(type==='professional'?'badge-success':'badge-primary'),children:type.charAt(0).toUpperCase()+type.slice(1)})]}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[email&&/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-envelope-open\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\" \",email]})]}),/*#__PURE__*/_jsxs(\"li\",{children:[phone&&/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-phone\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\" \",phone]})]})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-dark btn-sm\",onClick:function onClick(){return setCurrent(contact);},children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger btn-sm\",onClick:onDelete,children:\"delete\"})]})]});};ContactItems.prototype={contact:PropTypes.object.isRequired};export default ContactItems;","map":{"version":3,"sources":["E:/Axoms course/Module B/Mern Stack Projects/contact-manager/client/src/components/contact/ContactItems.js"],"names":["React","useContext","PropTypes","ContactContext","ContactItems","contact","_id","name","email","phone","type","contactContext","deleteContact","setCurrent","clearCurrent","onDelete","float","charAt","toUpperCase","slice","prototype","object","isRequired"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,C,wFACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACpC,GAAQC,CAAAA,GAAR,CAA0CD,OAA1C,CAAQC,GAAR,CAAaC,IAAb,CAA0CF,OAA1C,CAAaE,IAAb,CAAmBC,KAAnB,CAA0CH,OAA1C,CAAmBG,KAAnB,CAA0BC,KAA1B,CAA0CJ,OAA1C,CAA0BI,KAA1B,CAAiCC,IAAjC,CAA0CL,OAA1C,CAAiCK,IAAjC,CACA,GAAMC,CAAAA,cAAc,CAAGV,UAAU,CAACE,cAAD,CAAjC,CACA,GAAQS,CAAAA,aAAR,CAAoDD,cAApD,CAAQC,aAAR,CAAuBC,UAAvB,CAAoDF,cAApD,CAAuBE,UAAvB,CAAmCC,YAAnC,CAAoDH,cAApD,CAAmCG,YAAnC,CACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrBH,aAAa,CAACN,GAAD,CAAb,CACAQ,YAAY,GACb,CAHD,CAIA,mBACE,aAAK,SAAS,CAAC,eAAf,wBACE,YAAI,SAAS,CAAC,wBAAd,WACGP,IADH,CAEG,EAFH,cAGE,aACE,KAAK,CAAE,CAAES,KAAK,CAAE,OAAT,CADT,CAEE,SAAS,CACP,UACCN,IAAI,GAAK,cAAT,CAA0B,eAA1B,CAA4C,eAD7C,CAHJ,UAOGA,IAAI,CAACO,MAAL,CAAY,CAAZ,EAAeC,WAAf,GAA+BR,IAAI,CAACS,KAAL,CAAW,CAAX,CAPlC,EAHF,GADF,cAcE,YAAI,SAAS,CAAC,MAAd,wBACE,sBACGX,KAAK,eAAI,UAAG,SAAS,CAAC,sBAAb,EADZ,cAEE,4BAAQA,KAAR,GAFF,GADF,cAKE,sBACGC,KAAK,eAAI,UAAG,SAAS,CAAC,cAAb,EADZ,cAEE,4BAAQA,KAAR,GAFF,GALF,GAdF,cAwBE,kCACE,eACE,SAAS,CAAC,qBADZ,CAEE,OAAO,CAAE,yBAAMI,CAAAA,UAAU,CAACR,OAAD,CAAhB,EAFX,kBADF,cAOE,eAAQ,SAAS,CAAC,uBAAlB,CAA0C,OAAO,CAAEU,QAAnD,oBAPF,GAxBF,GADF,CAsCD,CA9CD,CAgDAX,YAAY,CAACgB,SAAb,CAAyB,CACvBf,OAAO,CAAEH,SAAS,CAACmB,MAAV,CAAiBC,UADH,CAAzB,CAIA,cAAelB,CAAAA,YAAf","sourcesContent":["import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactContext from '../../context/contact/contactContext';\r\nconst ContactItems = ({ contact }) => {\r\n  const { _id, name, email, phone, type } = contact;\r\n  const contactContext = useContext(ContactContext);\r\n  const { deleteContact, setCurrent, clearCurrent } = contactContext;\r\n  const onDelete = () => {\r\n    deleteContact(_id);\r\n    clearCurrent();\r\n  };\r\n  return (\r\n    <div className=\"card bg-light\">\r\n      <h3 className=\"text-primary text-left\">\r\n        {name}\r\n        {''}\r\n        <span\r\n          style={{ float: 'right' }}\r\n          className={\r\n            'badge ' +\r\n            (type === 'professional' ? 'badge-success' : 'badge-primary')\r\n          }\r\n        >\r\n          {type.charAt(0).toUpperCase() + type.slice(1)}\r\n        </span>\r\n      </h3>\r\n      <ul className=\"list\">\r\n        <li>\r\n          {email && <i className=\"fas fa-envelope-open\" />}\r\n          <span> {email}</span>\r\n        </li>\r\n        <li>\r\n          {phone && <i className=\"fas fa-phone\" />}\r\n          <span> {phone}</span>\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        <button\r\n          className=\"btn btn-dark btn-sm\"\r\n          onClick={() => setCurrent(contact)}\r\n        >\r\n          Edit\r\n        </button>\r\n        <button className=\"btn btn-danger btn-sm\" onClick={onDelete}>\r\n          delete\r\n        </button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactItems.prototype = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ContactItems;\r\n"]},"metadata":{},"sourceType":"module"}