[{"E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\index.js":"1","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\App.js":"2","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\layout\\Navbar.js":"3","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\pages\\Home.js":"4","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\pages\\About.js":"5","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\contact\\contactContext.js":"6","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\contact\\ContactState.js":"7","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\types.js":"8","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\contact\\contactReducers.js":"9","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\contact\\Contacts.js":"10","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\contact\\contactItems.js":"11","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\contact\\ContactItems.js":"12","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\contact\\ContactForm.js":"13","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\contact\\ContactFilter.js":"14","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\auth\\Register.js":"15","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\auth\\AuthState.js":"16","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\auth\\authContext.js":"17","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\auth\\authReducer.js":"18","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\auth\\Login.js":"19","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\alert\\AlertState.js":"20","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\alert\\alertContext.js":"21","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\alert\\alertReducer.js":"22","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\layout\\Alert.js":"23"},{"size":197,"mtime":1633035448700,"results":"24","hashOfConfig":"25"},{"size":1364,"mtime":1633503960916,"results":"26","hashOfConfig":"25"},{"size":816,"mtime":1633501597410,"results":"27","hashOfConfig":"25"},{"size":404,"mtime":1633363290574,"results":"28","hashOfConfig":"25"},{"size":386,"mtime":1633085033077,"results":"29","hashOfConfig":"25"},{"size":162,"mtime":1633088814752,"results":"30","hashOfConfig":"25"},{"size":2299,"mtime":1633363536092,"results":"31","hashOfConfig":"25"},{"size":811,"mtime":1633498565482,"results":"32","hashOfConfig":"25"},{"size":1754,"mtime":1633363570870,"results":"33","hashOfConfig":"25"},{"size":701,"mtime":1633365369931,"results":"34","hashOfConfig":"25"},{"size":1150,"mtime":1633161472333,"results":"35","hashOfConfig":"25"},{"size":1563,"mtime":1633333023359,"results":"36","hashOfConfig":"25"},{"size":2520,"mtime":1633343627882,"results":"37","hashOfConfig":"25"},{"size":978,"mtime":1633363648758,"results":"38","hashOfConfig":"25"},{"size":2599,"mtime":1633517127103,"results":"39","hashOfConfig":"25"},{"size":2089,"mtime":1633517437906,"results":"40","hashOfConfig":"25"},{"size":107,"mtime":1633498266081,"results":"41","hashOfConfig":"25"},{"size":774,"mtime":1633516206630,"results":"42","hashOfConfig":"25"},{"size":1189,"mtime":1633501507402,"results":"43","hashOfConfig":"25"},{"size":832,"mtime":1633513689460,"results":"44","hashOfConfig":"25"},{"size":113,"mtime":1633505506075,"results":"45","hashOfConfig":"25"},{"size":355,"mtime":1633503441332,"results":"46","hashOfConfig":"25"},{"size":462,"mtime":1633506211516,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"ww5q9s",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\index.js",[],["101","102"],"E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\App.js",[],"E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\layout\\Navbar.js",[],"E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\pages\\Home.js",[],"E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\pages\\About.js",[],"E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\contact\\contactContext.js",[],"E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\contact\\ContactState.js",["103"],"import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport contactContext from './contactContext';\r\nimport contactReducer from './contactReducers';\r\nimport {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACT,\r\n  CLEAR_FILTER,\r\n} from '../types';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = {\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        name: 'ibrahim',\r\n        email: 'ibrahim@gmail.com',\r\n        phone: '0093838',\r\n        type: 'personal',\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'ismail',\r\n        email: 'ismailm@gmail.com',\r\n        phone: '930308',\r\n        type: 'personal',\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'ishaq',\r\n        email: 'ishqm@gmail.com',\r\n        phone: '037388',\r\n        type: 'professional',\r\n      },\r\n    ],\r\n\r\n    current: null,\r\n    filter: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  // Add contact\r\n  const addContact = (contact) => {\r\n    contact.id = uuid;\r\n    dispatch({ type: ADD_CONTACT, payload: contact });\r\n  };\r\n\r\n  // delete conatact\r\n  const deleteContact = (id) => {\r\n    dispatch({ type: DELETE_CONTACT, payload: id });\r\n  };\r\n\r\n  // set Current\r\n  const setCurrent = (contact) => {\r\n    dispatch({ type: SET_CURRENT, payload: contact });\r\n  };\r\n\r\n  // clear current\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n\r\n  // update contact\r\n\r\n  const updateContact = (contact) => {\r\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n  };\r\n\r\n  // Filter the contact\r\n  const filterContact = (text) => {\r\n    dispatch({ type: FILTER_CONTACT, payload: text });\r\n  };\r\n\r\n  // clear Filter the contact\r\n\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n\r\n  return (\r\n    <contactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filter: state.filter,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateContact,\r\n        filterContact,\r\n        clearFilter,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </contactContext.Provider>\r\n  );\r\n};\r\nexport default ContactState;\r\n","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\types.js",[],"E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\contact\\contactReducers.js",["104","105","106"],"import {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACT,\r\n  CLEAR_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n} from '../types';\r\n\r\nconst contactReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload],\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id ? action.payload : contact\r\n        ),\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n\r\n    case FILTER_CONTACT:\r\n      return {\r\n        ...state,\r\n        filter: state.contacts.filter((contact) => {\r\n          // we make regular expression ..in regular expression first we pass action.payload the action.payload contant the text\r\n          // and g means globally match the text and i means not a case sensative\r\n          const regex = new RegExp(`${action.payload}`, 'gi');\r\n          // we match the contact name to search box text and after we match email to search box text\r\n          return contact.name.match(regex) || contact.email.match(regex);\r\n        }),\r\n      };\r\n\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contactReducer;\r\n","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\contact\\Contacts.js",[],"E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\contact\\contactItems.js",["107","108","109","110","111"],"E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\contact\\ContactItems.js",["112"],"import React, { Fragment, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactContext from '../../context/contact/contactContext';\r\nconst ContactItems = ({ contact }) => {\r\n  const { id, name, email, phone, type } = contact;\r\n  const contactContext = useContext(ContactContext);\r\n  const { deleteContact, setCurrent, clearCurrent } = contactContext;\r\n  const onDelete = () => {\r\n    deleteContact(id);\r\n    clearCurrent();\r\n  };\r\n  return (\r\n    <div className=\"card bg-light\">\r\n      <h3 className=\"text-primary text-left\">\r\n        {name}\r\n        {''}\r\n        <span\r\n          style={{ float: 'right' }}\r\n          className={\r\n            'badge ' +\r\n            (type === 'professional' ? 'badge-success' : 'badge-primary')\r\n          }\r\n        >\r\n          {type.charAt(0).toUpperCase() + type.slice(1)}\r\n        </span>\r\n      </h3>\r\n      <ul className=\"list\">\r\n        <li>\r\n          {email && <i className=\"fas fa-envelope-open\" />}\r\n          <span> {email}</span>\r\n        </li>\r\n        <li>\r\n          {phone && <i className=\"fas fa-phone\" />}\r\n          <span> {phone}</span>\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        <button\r\n          className=\"btn btn-dark btn-sm\"\r\n          onClick={() => setCurrent(contact)}\r\n        >\r\n          Edit\r\n        </button>\r\n        <button className=\"btn btn-danger btn-sm\" onClick={onDelete}>\r\n          delete\r\n        </button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactItems.prototype = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ContactItems;\r\n","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\contact\\ContactForm.js",[],"E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\contact\\ContactFilter.js",[],"E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\auth\\Register.js",[],"E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\auth\\AuthState.js",["113","114","115","116","117","118","119"],"import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport authContext from './authContext';\r\nimport authReducer from './authReducer';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGINOUT,\r\n  AUTH_ERROR,\r\n  CLEAR_ERRORS,\r\n} from '../types';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    token: localStorage.getItem('token'),\r\n    //check the user login or not\r\n    isAuthentication: null,\r\n    // jb page loading hoga tu loading true our jab load ho jaya ga tu ladding false ho jay ga\r\n    loading: true,\r\n    // jis ko user ko hmna authenticate krna ha\r\n    user: null,\r\n    error: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // load user\r\n  // Register user\r\n  // const Register = async (formData) => {\r\n  //   const config = {\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json',\r\n  //     },\r\n  //   };\r\n\r\n  //   try {\r\n  //     const res = await axios.post('/api/users', formData, config);\r\n  //     dispatch({ type: REGISTER_SUCCESS, payload: res.data });\r\n  //   } catch (error) {\r\n  //     dispatch({ type: REGISTER_FAIL, payload: error.response.data.msg });\r\n  //   }\r\n  // };\r\n\r\n  const register = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post('/api/users', formData, config);\r\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: REGISTER_FAIL, payload: err.response.data.msg });\r\n    }\r\n  };\r\n\r\n  //login user\r\n  //logout user\r\n  // clear errors\r\n\r\n  return (\r\n    <authContext.Provider\r\n      value={{\r\n        token: state.token,\r\n\r\n        isAuthentication: state.isAuthentication,\r\n\r\n        loading: state.loading,\r\n\r\n        user: state.user,\r\n        error: state.error,\r\n        register,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </authContext.Provider>\r\n  );\r\n};\r\nexport default AuthState;\r\n","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\auth\\authContext.js",[],"E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\auth\\authReducer.js",["120","121","122","123","124","125"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGINOUT,\r\n  AUTH_ERROR,\r\n  CLEAR_ERRORS,\r\n} from '../types';\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthentication: true,\r\n        loading: false,\r\n      };\r\n\r\n    case REGISTER_FAIL:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        isAuthentication: false,\r\n        token: null,\r\n        loading: false,\r\n        user: null,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\auth\\Login.js",[],"E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\alert\\AlertState.js",["126"],"import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport alertContext from './alertContext';\r\nimport alertReducer from './alertReducer';\r\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst AlertState = (props) => {\r\n  const initialState = [];\r\n\r\n  const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n  // Set alert\r\n  // 5000 ms is equal to 5 second\r\n  const setAlert = (msg, type, timeout = 5000) => {\r\n    const id = uuid();\r\n    dispatch({ type: SET_ALERT, payload: { msg, type, id } });\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n  };\r\n\r\n  return (\r\n    <alertContext.Provider value={{ alert: state, setAlert }}>\r\n      {props.children}\r\n    </alertContext.Provider>\r\n  );\r\n};\r\nexport default AlertState;\r\n","E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\alert\\alertContext.js",[],"E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\context\\alert\\alertReducer.js",[],"E:\\Axoms course\\Module B\\Mern Stack Projects\\contact-manager\\client\\src\\components\\layout\\Alert.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":13},{"ruleId":"131","severity":1,"message":"135","line":2,"column":3,"nodeType":"133","messageId":"134","endLine":2,"endColumn":15},{"ruleId":"131","severity":1,"message":"136","line":9,"column":3,"nodeType":"133","messageId":"134","endLine":9,"endColumn":17},{"ruleId":"131","severity":1,"message":"137","line":11,"column":3,"nodeType":"133","messageId":"134","endLine":11,"endColumn":16},{"ruleId":"131","severity":1,"message":"138","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"139","line":4,"column":11,"nodeType":"133","messageId":"134","endLine":4,"endColumn":13},{"ruleId":"131","severity":1,"message":"140","line":4,"column":21,"nodeType":"133","messageId":"134","endLine":4,"endColumn":26},{"ruleId":"131","severity":1,"message":"141","line":4,"column":28,"nodeType":"133","messageId":"134","endLine":4,"endColumn":33},{"ruleId":"131","severity":1,"message":"142","line":4,"column":35,"nodeType":"133","messageId":"134","endLine":4,"endColumn":39},{"ruleId":"131","severity":1,"message":"138","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"143","line":8,"column":3,"nodeType":"133","messageId":"134","endLine":8,"endColumn":14},{"ruleId":"131","severity":1,"message":"144","line":9,"column":3,"nodeType":"133","messageId":"134","endLine":9,"endColumn":16},{"ruleId":"131","severity":1,"message":"145","line":10,"column":3,"nodeType":"133","messageId":"134","endLine":10,"endColumn":13},{"ruleId":"131","severity":1,"message":"146","line":11,"column":3,"nodeType":"133","messageId":"134","endLine":11,"endColumn":11},{"ruleId":"131","severity":1,"message":"147","line":12,"column":3,"nodeType":"133","messageId":"134","endLine":12,"endColumn":13},{"ruleId":"131","severity":1,"message":"148","line":13,"column":3,"nodeType":"133","messageId":"134","endLine":13,"endColumn":15},{"ruleId":"131","severity":1,"message":"149","line":15,"column":16,"nodeType":"133","messageId":"134","endLine":15,"endColumn":20},{"ruleId":"131","severity":1,"message":"143","line":4,"column":3,"nodeType":"133","messageId":"134","endLine":4,"endColumn":14},{"ruleId":"131","severity":1,"message":"144","line":5,"column":3,"nodeType":"133","messageId":"134","endLine":5,"endColumn":16},{"ruleId":"131","severity":1,"message":"145","line":6,"column":3,"nodeType":"133","messageId":"134","endLine":6,"endColumn":13},{"ruleId":"131","severity":1,"message":"146","line":7,"column":3,"nodeType":"133","messageId":"134","endLine":7,"endColumn":11},{"ruleId":"131","severity":1,"message":"147","line":8,"column":3,"nodeType":"133","messageId":"134","endLine":8,"endColumn":13},{"ruleId":"131","severity":1,"message":"148","line":9,"column":3,"nodeType":"133","messageId":"134","endLine":9,"endColumn":15},{"ruleId":"131","severity":1,"message":"132","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":13},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'GET_CONTACTS' is defined but never used.","'CLEAR_CONTACTS' is defined but never used.","'CONTACT_ERROR' is defined but never used.","'Fragment' is defined but never used.","'id' is assigned a value but never used.","'email' is assigned a value but never used.","'phone' is assigned a value but never used.","'type' is assigned a value but never used.","'USER_LOADED' is defined but never used.","'LOGIN_SUCCESS' is defined but never used.","'LOGIN_FAIL' is defined but never used.","'LOGINOUT' is defined but never used.","'AUTH_ERROR' is defined but never used.","'CLEAR_ERRORS' is defined but never used.","'uuid' is defined but never used.","no-global-assign","no-unsafe-negation"]